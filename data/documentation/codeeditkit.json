{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is still work in progress."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/orgs\/CodeEditApp\/discussions\/792"},{"type":"text","text":" for more information."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/codeeditkit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"CodeEditKit is a dynamic library which is shared between CodeEdit and it’s extensions. It allows them to communicate with and understand one another."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"CodeEditKit","title":"CodeEditKit","symbolKind":"module","role":"collection","modules":[{"name":"CodeEditKit"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionBuilder"]},{"title":"Protocols","identifiers":["doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionAPI","doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionInterface","doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/TargetsAPI"]},{"title":"Structures","identifiers":["doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionManifest","doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/Target"]}],"references":{"doc://CodeEditKit/documentation/CodeEditKit/Target":{"role":"symbol","title":"Target","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Target"}],"abstract":[{"type":"text","text":"This structure stores information about the target to be available in CodeEdit for running"}],"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/Target","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Target"}],"url":"\/documentation\/codeeditkit\/target"},"doc://CodeEditKit/documentation/CodeEditKit/ExtensionInterface":{"role":"symbol","title":"ExtensionInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExtensionInterface"}],"abstract":[{"type":"text","text":"A protocol for extensions to conform to"}],"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExtensionInterface"}],"url":"\/documentation\/codeeditkit\/extensioninterface"},"doc://CodeEditKit/documentation/CodeEditKit/ExtensionManifest":{"role":"symbol","title":"ExtensionManifest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExtensionManifest"}],"abstract":[],"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionManifest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExtensionManifest"}],"url":"\/documentation\/codeeditkit\/extensionmanifest"},"doc://CodeEditKit/documentation/CodeEditKit":{"role":"collection","title":"CodeEditKit","abstract":[{"type":"text","text":"CodeEditKit is a dynamic library which is shared between CodeEdit and it’s extensions. It allows them to communicate with and understand one another."}],"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit","kind":"symbol","type":"topic","url":"\/documentation\/codeeditkit"},"doc://CodeEditKit/documentation/CodeEditKit/TargetsAPI":{"role":"symbol","title":"TargetsAPI","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TargetsAPI"}],"abstract":[{"type":"text","text":"API for targets"}],"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/TargetsAPI","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TargetsAPI"}],"url":"\/documentation\/codeeditkit\/targetsapi"},"https://github.com/orgs/CodeEditApp/discussions/792":{"title":"this thread","titleInlineContent":[{"type":"text","text":"this thread"}],"type":"link","identifier":"https:\/\/github.com\/orgs\/CodeEditApp\/discussions\/792","url":"https:\/\/github.com\/orgs\/CodeEditApp\/discussions\/792"},"doc://CodeEditKit/documentation/CodeEditKit/ExtensionBuilder":{"role":"symbol","title":"ExtensionBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExtensionBuilder"}],"abstract":[],"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExtensionBuilder"}],"url":"\/documentation\/codeeditkit\/extensionbuilder"},"doc://CodeEditKit/documentation/CodeEditKit/ExtensionAPI/extensionId":{"role":"symbol","title":"extensionId","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"extensionId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[],"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionAPI\/extensionId","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/codeeditkit\/extensionapi\/extensionid"},"doc://CodeEditKit/documentation/CodeEditKit/ExtensionAPI":{"role":"symbol","title":"ExtensionAPI","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExtensionAPI"}],"abstract":[{"type":"text","text":"A protocol to conform to for Extension API instance assigned to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionAPI\/extensionId"}],"identifier":"doc:\/\/CodeEditKit\/documentation\/CodeEditKit\/ExtensionAPI","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExtensionAPI"}],"url":"\/documentation\/codeeditkit\/extensionapi"}}}